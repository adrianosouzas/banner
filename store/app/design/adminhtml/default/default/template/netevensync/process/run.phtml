<?php
/**
 * Process template
 *
 * @category	Neteven
 * @package		Neteven_NetevenSync
 * @copyright	Copyright (c) 2013 Agence Soon. (http://www.agence-soon.fr)
 * @licence		http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 * @author		HervÃ© G. - Twitter : @vrnet
 */ 
?>
<style type="text/css" >
    ul { list-style-type:none; padding:0; margin:0; }
    li { margin-left:0; border:1px solid #ccc; margin:2px; padding:2px 2px 2px 2px; font:normal 12px sans-serif; }
    img { margin-right:5px; }
</style>
<script type="text/javascript">
    var FORM_KEY = "<?php echo $this->getFormKey();?>";
</script>
<ul>
	<li>
		<img src="<?php echo $this->getSkinUrl('images/note_msg_icon.gif')?>" class="v-middle" style="margin-right:5px"/>
		<?php echo $this->__('Starting process execution, please wait...');?>
	</li>
	<li style="background-color:#FFD;">
		<img src="<?php echo $this->getSkinUrl('images/fam_bullet_error.gif');?>" class="v-middle" style="margin-right:5px"/>
		<?php echo $this->__('Warning: Please do not close the window during this process');?>
	</li>
</ul>
<ul id="processRows">
	<li id="liFinished" style="display:none;">
		<img src="<?php echo $this->getSkinUrl('images/note_msg_icon.gif');?>" class="v-middle" style="margin-right:5px"/>
		<?php echo $this->__("Finished process execution");?>
	</li>
</ul>
<script type="text/javascript">
	var processedPages = 0;
	var countOfUpdated = 0;
	var exportTotalRecords = 0;
	var exportTotalPages = 0;
	var importTotalRecords = 0;
	var importTotalPages = 0;
	var totalRecords = 0;
	var type = '<?php echo $this->getType()?>';
	var mode = '<?php echo $this->getMode()?>';
	var url = '<?php echo $this->getProcessUrl()?>';
	var config= <?php echo $this->getBatchConfigJson();?>;

    if (!config.tpl) {
        config.tpl = new Template(config.template);
        config.tplTxt = new Template(config.text);
        config.tplSccTxt = new Template(config.successText);
    }

    function getPercent() {
        return Math.ceil((countOfUpdated/totalRecords)*1000)/10;
    }

    function runAjax(url, page, dir) {
        new Ajax.Request(url + 'page/' + page + '/dir/' + dir, {
            method: "post",
            parameters: {form_key: FORM_KEY},
            asynchronous: false, // We use synchronous calls to avoid heavy server load
            onComplete: function(transport) {
                if (transport.responseText.isJSON()) {
                    var response = transport.responseText.evalJSON();
                    if (response.error) {
                        Element.insert($("liFinished"), {before: config.tpl.evaluate({
                            style: "background-color:"+config.styles.error.bg,
                            image: config.styles.error.icon,
                            text: response.error.escapeHTML(),
                            id: "error" + page
                        })});
                    }

                    countOfUpdated = countOfUpdated + response.savedRows;
                    $("updatedRows_status").update(config.tplTxt.evaluate({updated:countOfUpdated, percent:getPercent(), total:totalRecords}));

                    processedPages++;
            		if(processedPages == exportTotalPages + importTotalPages) {
            			if(countOfUpdated < totalRecords && type != 'order') {
                            Element.insert($("liFinished"), {before: config.tpl.evaluate({
                                style: "background-color:"+config.styles.message.bg,
                                image: config.styles.message.icon,
                                text: '<?php echo Mage::helper('core')->jsQuoteEscape(Mage::helper('netevensync')->__('Some items have not been exported as they are out of stock. Please change configuration if you wish to export them.')) ?>',
	                                id: "error-stock"
	                            })});
	            			}

            				runAfterProcesses();
            			
	            		}
	                }
	            }
	        });
	    }

    function runAfterProcesses() {

        Element.insert($("liFinished"), {before: config.tpl.evaluate({
            style: "background-color:"+config.styles.message.bg,
            image: config.styles.message.icon,
            text: '<?php echo Mage::helper('core')->jsQuoteEscape(Mage::helper('netevensync')->__('Processing last operations, please wait...')) ?>',
            id: "before-finish"
        })});
        
        if(importTotalRecords > 0) {        
        	runAfterProcess('import');
    	}
    	   
    	if(exportTotalRecords > 0) {        
    		runAfterProcess('export');
    	}

		$('liFinished').show();
		$('updatedRows_img').hide();    	
    }

    function runAfterProcess(dir) {
        
        new Ajax.Request('<?php echo $this->getFinishUrl()?>' + 'dir/' + dir, {
            method: "post",
            parameters: {form_key: FORM_KEY},
            asynchronous: false, // We use synchronous calls to avoid heavy server load
            onComplete: function(transport) {
                if (transport.responseText.isJSON()) {
                    var response = transport.responseText.evalJSON();
                    if (response.error) {
                        Element.insert($("liFinished"), {before: config.tpl.evaluate({
                            style: "background-color:"+config.styles.error.bg,
                            image: config.styles.error.icon,
                            text: response.error.escapeHTML(),
                            id: "error-finish"
                        })});
                    }
	              }
	            }
	    });
    }

    new Ajax.Request('<?php echo $this->getLaunchUrl()?>', {
        method: "post",
        parameters: {form_key: FORM_KEY},
        onComplete: function(transport) {
            if (transport.responseText.isJSON()) {
                var response = transport.responseText.evalJSON();
                if (response.error) {
                    Element.insert($("liFinished"), {before: config.tpl.evaluate({
                        style: "background-color:"+config.styles.error.bg,
                        image: config.styles.error.icon,
                        text: response.error.escapeHTML(),
                        id: "error-launch"
                    })});

                    return;
                }
                
                importTotalRecords = response.importItemCount;
                exportTotalRecords = response.exportItemCount;
                totalRecords = exportTotalRecords + importTotalRecords;
                importTotalPages = response.importPageCount;
                exportTotalPages = response.exportPageCount;

                Element.insert($("liFinished"), {before: config.tpl.evaluate({
                    style: "background-color:"+config.styles.message.bg,
                    image: config.styles.message.icon,
                    text: response.message.escapeHTML(),
                    id: "count"
                })});

                if(totalRecords < 1) {
                	$('liFinished').show();
                    return;
                }

                if (!$("updatedRows")) {
                    Element.insert($("liFinished"), {before: config.tpl.evaluate({
                        style: "background-color: #FFD;",
                        image: config.styles.loader,
                        text: config.tplTxt.evaluate({updated:countOfUpdated, percent:getPercent(), total:totalRecords}),
                        id: "updatedRows"
                    })});
                }

                if(importTotalRecords > 0) {        
            	   	for(var page = 1; page <= importTotalPages; page++) {
            	   		runAjax(url, page, 'import');
            	   	}
            	}
            	   
            	if(exportTotalRecords > 0) {        
            	 	for(var page = 1; page <= exportTotalPages; page++) {
            	  		runAjax(url, page, 'export');
            	   	}
            	}
            }
        }
    });
</script>